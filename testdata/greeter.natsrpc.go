// This code was autogenerated from natsrpc.gencode, do not edit.

package testdata

import (
	"context"
	"github.com/byebyebruce/natsrpc/testdata/pb"

	"github.com/byebyebruce/natsrpc"
	"github.com/golang/protobuf/proto"
	"github.com/nats-io/nats.go"
)

// RegisterGreeter
func RegisterGreeter(server *natsrpc.Server, s Greeter, opts ...natsrpc.Option) (natsrpc.Service, error) {
	return server.Register("testdata.Greeter", s, opts...)
}

// GreeterClient
type GreeterClient struct {
	c *natsrpc.Client
}

// NewGreeterClient
func NewGreeterClient(enc *nats.EncodedConn, opts ...natsrpc.Option) (*GreeterClient, error) {
	c, err := natsrpc.NewClient(enc, "testdata.Greeter", opts...)
	if err != nil {
		return nil, err
	}
	ret := &GreeterClient{
		c: c,
	}
	return ret, nil
}

// ID 根据ID获得client
func (c *GreeterClient) ID(id interface{}) *GreeterClient {
	return &GreeterClient{
		c: c.c.ID(id),
	}
}

// PublishHiAll
func (c *GreeterClient) PublishHiAll(req *pb.HelloRequest) error {
	return c.c.Publish("HiAll", req)
}

// RequestAreYouOK
func (c *GreeterClient) RequestAreYouOK(ctx context.Context, req *pb.HelloRequest) (*pb.HelloReply, error) {
	rep := &pb.HelloReply{}
	err := c.c.Request(ctx, "AreYouOK", req, rep)
	return rep, err
}

// AsyncRequestAreYouOK
func (c *GreeterClient) AsyncRequestAreYouOK(req *pb.HelloRequest, cb func(*pb.HelloReply, error)) {
	rep := &pb.HelloReply{}
	f := func(_ proto.Message, err error) {
		cb(rep, err)
	}
	c.c.AsyncRequest("AreYouOK", req, rep, f)
}
