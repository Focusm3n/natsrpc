// This code was autogenerated from natsrpc.gencode, do not edit.
package pb

import (
	"context"

	"github.com/byebyebruce/natsrpc"
	"github.com/golang/protobuf/proto"
	"github.com/nats-io/nats.go"
)

var _ proto.Message

// Greeter
type Greeter interface {
	// PublishAreYouOK
	PublishAreYouOK(ctx context.Context, notify *HelloRequest)
}

// RegisterGreeter
func RegisterGreeter(server *natsrpc.Server, s Greeter, opts ...natsrpc.Option) (natsrpc.Service, error) {
	return server.Register("github.com/byebyebruce/natsrpc/testdata/pb.Greeter", s, opts...)
}

// GreeterClient
type GreeterClient struct {
	c *natsrpc.Client
}

// NewGreeterClient
func NewGreeterClient(enc *nats.EncodedConn, opts ...natsrpc.Option) (*GreeterClient, error) {
	c, err := natsrpc.NewClient(enc, "github.com/byebyebruce/natsrpc/testdata/pb.Greeter", opts...)
	if err != nil {
		return nil, err
	}
	ret := &GreeterClient{
		c: c,
	}
	return ret, nil
}

// ID 根据ID获得client
func (c *GreeterClient) ID(id interface{}) *GreeterClient {
	return &GreeterClient{
		c: c.c.ID(id),
	}
}

// PublishAreYouOK
func (c *GreeterClient) PublishAreYouOK(notify *HelloRequest) error {
	return c.c.Publish("AreYouOK", notify)
}
