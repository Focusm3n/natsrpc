package main

const tFile = `// This code was autogenerated from natsrpc.gencode, do not edit.

package {{.OutPackage}}

import (
	"context"

	{{- range  .Imports}}
	{{.}}
	{{- end}}

	"github.com/byebyebruce/natsrpc"
	"github.com/golang/protobuf/proto"
	"github.com/nats-io/nats.go"
)
{{- range .Service}}

// Register{{.Name}} {{.Comment}}
func Register{{.Name}}(server *natsrpc.Server, s {{.Name}}, opts ...natsrpc.Option) (natsrpc.Service, error) {
	return server.Register("{{$.Package}}.{{.Name}}", s, opts...)
}

{{- $clientName := .Name}}

// {{.Name}}Client
type {{.Name}}Client struct {
	c 		*natsrpc.Client
}

// New{{.Name}}Client
func New{{.Name}}Client(enc *nats.EncodedConn, opts ...natsrpc.Option) (*{{.Name}}Client, error) {
	c, err := natsrpc.NewClient(enc, "{{$.Package}}.{{.Name}}", opts...)
	if err != nil {
		return nil, err
	}
	ret := &{{.Name}}Client{
		c:c,
	}
	return ret, nil
}

// ID 根据ID获得client
func (c *{{.Name}}Client) ID(id interface{}) *{{.Name}}Client {
	return &{{.Name}}Client{
		c : c.c.ID(id),
	}
}

{{ range .Method}}
	{{- $paramLength := len .Param -}}
	{{- $req :=index .Param 1 -}}

	{{- if eq $paramLength 2 -}}
		// Publish{{.Name}} {{.Comment}}
		func (c *{{$clientName}}Client) Publish{{.Name}}({{ $req.Name }} *{{ $req.Type -}}) error {
			return c.c.Publish("{{.Name}}", {{ $req.Name }})
		}
	{{- end}}

	{{- if eq $paramLength 3 -}}
		{{- $rep :=index .Param 2 -}}

		// Request{{.Name}} {{.Comment}}
		func (c *{{$clientName}}Client) Request{{.Name}}(ctx context.Context, {{ $req.Name }} *{{ $req.Type }}) (*{{ $rep.Type }}, error) {
			rep := &{{ $rep.Type }}{}
			err := c.c.Request(ctx, "{{.Name}}", {{ $req.Name }}, rep)
			return rep, err
		}

		// AsyncRequest{{.Name}} {{.Comment}}
		func (c *{{$clientName}}Client) AsyncRequest{{.Name}}({{ $req.Name }} *{{ $req.Type }}, cb func(*{{ $rep.Type }}, error)){
			rep := &{{ $rep.Type }}{}
			f := func(_ proto.Message, err error) {
				cb(rep, err)
			}
			c.c.AsyncRequest("{{.Name}}", {{ $req.Name }}, rep, f)
		}
	{{- end}}
	

	
{{ end }}
	
{{- end}}
`
